{"version":3,"sources":["common/styles/CommonStyles.module.scss","components/Login/Login.module.scss","components/Header/Nava/Nava.module.scss","components/Main/Main.module.scss","common/components/Input/Input.module.scss","components/Contacts/Contacts.module.scss","common/components/WindowWrapper/WindowWrapper.module.scss","components/Skills/Skill/Skill.module.scss","components/Projects/Project/Project.module.scss","components/Footer/Footer.module.scss","components/Skills/Skills.module.scss","components/Projects/Projects.module.scss","common/components/Row/Row.module.scss","components/Header/Header.module.scss","common/components/Button/Button.module.scss","common/styles/Variables.module.scss","components/Up/Up.module.scss","components/Footer/Socnet/Socnet.module.scss","common/utils/updateErrors.ts","redux/appReducer/appReducer.ts","common/utils/setClasses.ts","common/components/Input/Input.tsx","common/components/Button/Button.tsx","common/customHooks/useFieldState.ts","common/api/requests.ts","common/constants/baseUrl.ts","common/api/loginAPI.ts","common/validators/Validator.ts","common/constants/regexps.ts","common/components/Row/Row.tsx","components/Login/Login.tsx","components/Header/Nava/Nava.tsx","components/Header/Header.tsx","redux/reducer.ts","components/Main/ChangableSpan/ChangableSpan.tsx","components/Main/Main.tsx","components/Skills/Skill/Skill.tsx","components/Skills/Skills.tsx","components/Projects/Project/Project.tsx","assets/pic/portfolio.png","assets/pic/book.png","assets/pic/socnet.png","assets/pic/testJob.png","assets/pic/pythonPortfolio.png","assets/pic/map.png","assets/pic/graph.jpg","components/Projects/Projects.tsx","common/api/messageAPI.ts","components/Contacts/Contacts.tsx","components/Up/Up.tsx","components/Footer/Socnet/Socnet.tsx","components/Footer/Footer.tsx","redux/store.ts","common/constants/ids.ts","common/classes/Particle/Particle.ts","common/components/WindowWrapper/WindowWrapperCanvas/WindowWrapperCanvas.tsx","common/components/WindowWrapper/WindowWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","updateErrors","errors","newErrors","_i","_keys","Object","keys","length","key","error","APP_UPDATE_STATE","APP_UPDATE_ERRORS","appUpdateState","payload","type","appState","windowWrapper","undefined","appWidth","appHeight","alert","authenticated","isMobile","setClasses","res","_len","arguments","classes","Array","_key","_classes","c","concat","Input","React","memo","_ref","name","asTextArea","containerClass","props","focusedBackgroundClass","_objectWithoutProperties","_excluded","_jsxs","className","styles","fieldContainer","children","_jsx","_objectSpread","input","field","textarea","underField","value","focusedDiv","text","focusedText","Button","submitBtn","useFieldState","validator","_useState","useState","data","getObject","resError","_useState2","_slicedToArray","state","setState","onChange","useCallback","event","currentTarget","dataset","trimStart","prev","newState","_defineProperty","updateObject","checkFields","checkObject","onBlur","clearState","obj","useEffect","requests","url","body","fetch","method","mode","JSON","stringify","credentials","headers","then","checkResponse","ok","json","Error","status","baseUrl","loginAPI","params","Validator","_createClass","validators","_this","_classCallCheck","updateValidators","required","message","String","compareWith","key2","checkStringLength","checkTemplate","template","test","checkField","args","i","this","emailRegexp","telegramRegexp","Row","withWrap","row","wrap","Login","loginMode","switchMode","container","LoginPage","SignUpPage","submit","onClick","useMemo","loginPassword","loginEmail","_useFieldState","_useFieldState2","dispatch","useDispatch","_Fragment","commonStyles","upperThenHeader","disabled","email","hash","catch","firstName","lastName","telegram","password","confirmPassword","_useFieldState3","_useFieldState4","inputContainer","console","log","Nava","currentAnchor","useSelector","linkStyle","elementId","link","active","divStyle","underMenu","underActive","scrollTo","elem","document","getElementById","y","getBoundingClientRect","top","window","pageYOffset","behavior","nava","linkContainer","NavLink","to","BsFileEarmarkPerson","AiOutlineFundProjectionScreen","GiSkills","AiOutlineContacts","element","loginStyles","loginContainer","FiLogOut","FiLogIn","Header","showUp","setShowUp","style","backgroundColor","variables","mainColor","id","header","CHANGE_TYPED_VALUE","REVERSE","END_TYPE_CYCLE","SET_CURRENT_ANCHOR","changeTypedValue","typed","setCurrentAnchor","initialState","mainSpans","reverse","count","ChangableSpan","currentCaption","typedCaption","setTimeout","slice","Math","random","react","Main","main","greeting","rest","keyboardSpan","developer","photo","Skill","skill","skillContainer","icon","FontAwesomeIcon","description","Skills","skillsEntities","faJs","faTextHeight","faFileCode","faCss3Alt","faSass","faHtml5","faProjectDiagram","faPython","faVials","faGithubSquare","faHighlighter","faEdit","faChartArea","faDigitalTachograph","skills","title","skillsContainer","map","Project","project","screen","cover","projectInfo","tags","tag","href","AiFillEye","Projects","projectEntities","backgroundImage","portfolioPic","bookPic","pythonPortfolio","socnet","testJob","graph","projects","projectsContainer","messageAPI","Contacts","subject","wrapper","inputs","Up","up","FaChevronUp","Socnet","size","Footer","footer","socnetsContainer","faVk","faGit","faTelegram","faAt","faPhone","faMapMarked","faWhatsapp","copyright","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","useAppDispatch","wwContainer","wwCanvas","appContainer","Particle","pos","radius","velocity","coef","x","ctx","fillStyle","beginPath","arc","PI","closePath","fill","WindowWrapperCanvas","width","height","drawFlag","useRef","reqId","innerWidth","innerHeight","dots","pcListener","push","clientX","clientY","splice","canvas","context","getContext","current","addEventListener","setInterval","render","clearRect","particle","move","draw","abs","requestAnimationFrame","clearInterval","cancelAnimationFrame","removeEventListener","onMouseEnter","onMouseLeave","svg","baseFrequency","in","scale","WindowWrapper","onClose","modalContainer","modalContent","closeBtn","IoCloseOutline","App","scrollY","setScrollY","_useState3","_useState4","elements","setElements","anchorsId","_useState5","_useState6","onScrollWindow","documentElement","scrollTop","offsetHeight","_step","_iterator","_createForOfIteratorHelper","s","n","done","rect","bottom","clientHeight","err","e","f","checkAnchorTC","ontouchstart","navigator","userAgent","toLowerCase","includes","observer","ResizeObserver","observe","unobserve","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","ReactDOM","createRoot","router","createHashRouter","path","Provider","RouterProvider"],"mappings":"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","file":"static/js/main.eeca9e64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"container\":\"CommonStyles_container__2LwPB\",\"upperThenHeader\":\"CommonStyles_upperThenHeader__2Ycdj\",\"title\":\"CommonStyles_title__3AQ6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3Scu4\",\"container\":\"Login_container__2wXPP\",\"submit\":\"Login_submit__3cWT7\",\"inputContainer\":\"Login_inputContainer__vzc2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nava\":\"Nava_nava__2vTop\",\"linkContainer\":\"Nava_linkContainer__1dj_3\",\"link\":\"Nava_link__1-pdb\",\"active\":\"Nava_active__1ePBq\",\"underMenu\":\"Nava_underMenu__2TPht\",\"underActive\":\"Nava_underActive__Wkpfr\",\"getWidth\":\"Nava_getWidth__1RciA\",\"loginBtn\":\"Nava_loginBtn__2QRwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"main\":\"Main_main__3JhNz\",\"container\":\"Main_container__3nnM7\",\"greeting\":\"Main_greeting__1Gpf4\",\"rest\":\"Main_rest__2W_Ir\",\"name\":\"Main_name__1vGqV\",\"keyboardSpan\":\"Main_keyboardSpan__3w3o3\",\"hideShow\":\"Main_hideShow__2hb8s\",\"photo\":\"Main_photo__iBiVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldContainer\":\"Input_fieldContainer__KQe-1\",\"underField\":\"Input_underField__yjKaL\",\"text\":\"Input_text__3JUjw\",\"field\":\"Input_field__3IptH\",\"input\":\"Input_input__1G7Da\",\"focusedDiv\":\"Input_focusedDiv__11HVz\",\"focusedText\":\"Input_focusedText__1CO8v\",\"textarea\":\"Input_textarea__1z3_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__2gTQ6\",\"container\":\"Contacts_container__Cm2eA\",\"inputsContainer\":\"Contacts_inputsContainer__1fihQ\",\"inputs\":\"Contacts_inputs__3rPyQ\",\"name\":\"Contacts_name__2oQo2\",\"email\":\"Contacts_email__oZxCs\",\"subject\":\"Contacts_subject__bP08e\",\"submit\":\"Contacts_submit__3haAu\",\"message\":\"Contacts_message__x-45f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"WindowWrapper_modalContainer__1nXr0\",\"modalContent\":\"WindowWrapper_modalContent__1_IpW\",\"closeBtn\":\"WindowWrapper_closeBtn__1Ab0w\",\"canvas\":\"WindowWrapper_canvas__2Cvb0\",\"svg\":\"WindowWrapper_svg__34UNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"skill\":\"Skill_skill__2UKgc\",\"skillContainer\":\"Skill_skillContainer__r9szd\",\"icon\":\"Skill_icon__2CWX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"project\":\"Project_project__3TOgG\",\"screen\":\"Project_screen__36zxS\",\"cover\":\"Project_cover__2Q4cs\",\"projectInfo\":\"Project_projectInfo__3aQWz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"footer\":\"Footer_footer__7dIj9\",\"container\":\"Footer_container__188QZ\",\"title\":\"Footer_title__2-0u5\",\"socnetsContainer\":\"Footer_socnetsContainer__1QYZa\",\"copyright\":\"Footer_copyright__2wqDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"skills\":\"Skills_skills__CrtEP\",\"container\":\"Skills_container__1BKaS\",\"skillsContainer\":\"Skills_skillsContainer__3L1Z8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"projects\":\"Projects_projects__3hCFj\",\"container\":\"Projects_container__24SQw\",\"projectsContainer\":\"Projects_projectsContainer__UCVmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__1yUUM\",\"wrap\":\"Row_wrap__3HDcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"header\":\"Header_header__1v0yI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"Button_submitBtn__LjBfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"up\":\"Up_up__2W5Gu\",\"show\":\"Up_show__2izx5\",\"svg\":\"Up_svg__2W5mS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#1e2326\",\"icon\":\"Socnet_icon__S4O-a\"};","import {tErrors} from '../types/types'\r\n\r\n/**\r\n * Функция обновляющая ошибки, если ошибка в новом объекте false, то удаляется из старого объекта,\r\n * иначе обновляется\r\n * @param errors объект старых ошибок, который необходимо обновить\r\n * @param newErrors объект новых ошибок, который необходимо влить\r\n */\r\nexport const updateErrors = (errors: tErrors, newErrors: { [key: string]: string | undefined }) => {\r\n    if (!errors) errors = {}\r\n    const keys = Object.keys(newErrors)\r\n    for (let key of keys) {\r\n        const error = newErrors[key]\r\n        if (error) {\r\n            errors[key] = error\r\n        } else {\r\n            delete errors[key]\r\n        }\r\n    }\r\n    return errors\r\n}","// action type\r\nimport {updateErrors} from '../../common/utils/updateErrors'\r\nimport {tErrors} from '../../common/types/types'\r\n\r\nexport type tAppActions = tAppUpdateState | tAppUpdateErrors\r\n\r\n// const\r\nconst APP_UPDATE_STATE = 'APP_UPDATE_STATE'\r\nconst APP_UPDATE_ERRORS = 'APP_UPDATE_ERRORS'\r\n\r\n\r\n// actions\r\ntype tAppUpdateErrors = ReturnType<typeof appUpdateErrors>\r\nexport const appUpdateErrors = (errors: { [key: string]: string | undefined }) => {\r\n    return {\r\n        type: APP_UPDATE_ERRORS,\r\n        payload: {\r\n            errors\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const appUpdateState = (payload: Partial<tAppState>) => {\r\n    return {\r\n        type: APP_UPDATE_STATE,\r\n        payload,\r\n    } as const\r\n}\r\ntype tAppUpdateState = ReturnType<typeof appUpdateState>\r\n\r\nexport type tWindowWrapper = {\r\n    element: JSX.Element,\r\n    containerClass?: string,\r\n}\r\nexport type tAppState = typeof appState\r\nconst appState = {\r\n    windowWrapper: undefined as tWindowWrapper | undefined,\r\n    errors: undefined as tErrors,\r\n    appWidth: 0 as number,\r\n    appHeight: 0 as number,\r\n    alert: undefined as undefined | string,\r\n    authenticated: false as boolean,\r\n    isMobile: false as boolean\r\n}\r\n\r\nexport const appReducer = (state: tAppState = appState, action: tAppActions) => {\r\n    switch (action.type) {\r\n        case APP_UPDATE_STATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case APP_UPDATE_ERRORS:\r\n            return {\r\n                ...state,\r\n                errors: {...updateErrors(state.errors, action.payload.errors)}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const setClasses = (...classes: any[]) => {\r\n    let res = ''\r\n    for (let c of classes) {\r\n        if (c) res += ` ${c}`\r\n    }\r\n    return res\r\n}","import React from 'react'\r\nimport {setClasses} from '../../utils/setClasses'\r\nimport styles from './Input.module.scss'\r\n\r\ntype tInput = {\r\n    name: string,\r\n    asTextArea?: boolean,\r\n    containerClass?: string,\r\n    focusedBackgroundClass?: string,\r\n    [key: string]: any\r\n}\r\nexport const Input: React.FC<tInput> = React.memo(({\r\n                                                       name,\r\n                                                       asTextArea,\r\n                                                       containerClass,\r\n                                                       focusedBackgroundClass,\r\n                                                       ...props\r\n                                                   }) => {\r\n    return (\r\n        <div className={setClasses(styles.fieldContainer, containerClass)}>\r\n            {\r\n                asTextArea ?\r\n                    <textarea className={setClasses(styles.input, styles.field, styles.textarea)}\r\n                              {...props}\r\n                    /> :\r\n                    <input className={setClasses(styles.input, styles.field)}\r\n                           {...props}\r\n                    />\r\n            }\r\n            <div className={setClasses(styles.underField, props.value && styles.focusedDiv)}/>\r\n            <div className={setClasses(styles.text, props.value && styles.focusedText)}>\r\n                {name}\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport styles from './Button.module.scss'\r\n\r\ntype tButton = {\r\n    text: string,\r\n    [key: string]: any,\r\n}\r\nexport const Button: React.FC<tButton> = React.memo(({\r\n                                                         text,\r\n                                                         ...props\r\n                                                     }) => {\r\n    return (\r\n        <button className={styles.submitBtn} {...props}>\r\n            {\r\n                text\r\n            }\r\n        </button>\r\n    )\r\n})","import {ChangeEvent, useCallback, useState, FocusEvent, useEffect} from 'react'\r\nimport {tValidator} from '../types/types'\r\nimport {tObjectType, Validator} from '../validators/Validator'\r\n\r\nexport type tKeys<T> = {\r\n    [Property in keyof T]: {\r\n        validators: Array<tValidator>\r\n    }\r\n}\r\n\r\ntype tState<T> = {\r\n    data: tObjectType<T>,\r\n    resError: string | undefined\r\n}\r\nexport const useFieldState = <T>(validator: Validator<T>): [\r\n    tState<T>,\r\n    (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\r\n    () => void,\r\n    (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\r\n] => {\r\n    const [state, setState] = useState<tState<T>>({\r\n        data: validator.getObject(),\r\n        resError: undefined\r\n    })\r\n\r\n    const onChange = useCallback((event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const field = event.currentTarget.dataset.name as keyof T\r\n        const value = event.currentTarget.value.trimStart()\r\n        setState(prev => {\r\n            const newState = {...prev, data: {...prev.data, [field]: value}}\r\n            validator.updateObject(newState.data)\r\n            return newState\r\n        })\r\n    }, [])\r\n\r\n    const checkFields = useCallback(() => {\r\n        setState((prev) => {\r\n            return {\r\n                ...prev,\r\n                resError: validator.checkObject()\r\n            }\r\n        })\r\n        return validator.checkObject()\r\n    }, [])\r\n    const onBlur = useCallback((event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        checkFields()\r\n    }, [])\r\n\r\n    const clearState = useCallback(() => {\r\n        setState((prev) => {\r\n            const obj: any = {}\r\n            const keys = Object.keys(prev)\r\n            for (let key of keys) {\r\n                obj[key] = ''\r\n            }\r\n            validator.updateObject(obj)\r\n            return {data: obj, resError: undefined}\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        checkFields()\r\n    }, [])\r\n\r\n    return [state, onChange, clearState, onBlur]\r\n}","export const requests = {\r\n    postRequest<T>(url: string, body: T) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            body: JSON.stringify(body),\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        })\r\n            .then(checkResponse)\r\n    },\r\n    getRequest<T>(url: string) {\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            mode: 'cors',\r\n        })\r\n            .then(checkResponse)\r\n    }\r\n}\r\n\r\nexport const checkResponse = (res: Response) => {\r\n    if (res.ok) {\r\n        return res.json()\r\n    } else {\r\n        throw new Error(`${res.url}, ${res.status}`)\r\n    }\r\n}","export const baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/v1' : 'https://railwayapp-production-3c99.up.railway.app/api/v1'","import {tLoginParams} from '../types/types'\r\nimport {requests} from './requests'\r\nimport {baseUrl} from '../constants/baseUrl'\r\nimport {tSignupParams} from '../../components/Login/Login'\r\n\r\nexport const loginAPI = {\r\n    login(params: tLoginParams) {\r\n        return requests.postRequest<tLoginParams>(`${baseUrl}/auth/signin`, params)\r\n    },\r\n    authenticate() {\r\n        return requests.getRequest(`${baseUrl}/auth/user`)\r\n    },\r\n    signup(params: tSignupParams) {\r\n        return requests.postRequest<tSignupParams>(`${baseUrl}/auth/signup`, params)\r\n    }\r\n}","export type tObjectType<T> = {\r\n    [property in keyof T]: string\r\n}\r\nexport type tObjectValidators<T> = {\r\n    [Property in keyof T]: {\r\n        validators: Array<(value: keyof T, message?: string, args?: any) => string | undefined>\r\n    }\r\n}\r\n\r\nexport interface iValidator<T> {\r\n}\r\n\r\nexport class Validator<T> implements iValidator<T> {\r\n    constructor(private obj: tObjectType<T>, private validators?: tObjectValidators<T>) {\r\n        this.obj = obj\r\n        this.validators = validators\r\n    }\r\n\r\n    updateObject = (obj: tObjectType<T>) => {\r\n        this.obj = obj\r\n    }\r\n\r\n    updateValidators = (validators: tObjectValidators<T>) => {\r\n        this.validators = validators\r\n    }\r\n\r\n    getObject = () => {\r\n        return this.obj\r\n    }\r\n\r\n    required = (message?: string) => {\r\n        return (key: keyof T) => {\r\n            if (this.obj[key]) return undefined\r\n            return message || `${String(key)} is required field`\r\n        }\r\n    }\r\n\r\n    compareWith = (key2: keyof T, message?: string) => {\r\n        return (key: keyof T) => {\r\n            if (this.obj[key] === this.obj[key2]) return undefined\r\n            return message || `${String(key)} an ${String(key2)} are not equal`\r\n        }\r\n    }\r\n\r\n    checkStringLength = (length: number, message?: string) => {\r\n        return (key: keyof T) => {\r\n            if (this.obj[key].length <= length) return undefined\r\n            return message || `Field ${String(key)} is exceed maximum length`\r\n        }\r\n    }\r\n\r\n    checkTemplate = (template: RegExp, message?: string) => {\r\n        return (key: keyof T) => {\r\n            if (!template.test(this.obj[key])) {\r\n                return message || `Field ${String(key)} is mismatching template`\r\n            }\r\n        }\r\n    }\r\n\r\n    checkField = (key: keyof T, message?: string, args?: any) => {\r\n        if (this.validators) {\r\n            for (let i = 0; i < this.validators[key].validators.length; i++) {\r\n                const res = this.validators[key].validators[i](key, message, args)\r\n                if (res) return res\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    checkObject = (): string | undefined => {\r\n        let resError\r\n        const keys = Object.keys(this.obj) as Array<keyof T>\r\n        for (let key of keys) {\r\n            resError = this.checkField(key)\r\n            if (resError) return resError\r\n        }\r\n        return resError\r\n    }\r\n}\r\n","export const emailRegexp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\r\nexport const telegramRegexp = /^@[A-Z0-9]+$/i","import React from 'react'\nimport styles from './Row.module.scss'\nimport {setClasses} from \"../../utils/setClasses\";\n\ntype tRow = {\n    children: React.ReactNode\n    withWrap?: boolean,\n}\nexport const Row: React.FC<tRow> = React.memo(({\n    children,\n    withWrap,\n                                         }) => {\n    return (\n        <div className={setClasses(\n            'flexCenter',\n            styles.row,\n            withWrap && styles.wrap,\n            )}>\n            {\n                children\n            }\n        </div>\n    )\n})","import React, {useCallback, useState, useMemo} from 'react'\r\nimport {Input} from '../../common/components/Input/Input'\r\nimport {Button} from '../../common/components/Button/Button'\r\nimport styles from './Login.module.scss'\r\nimport {setClasses} from '../../common/utils/setClasses'\r\nimport {useFieldState} from '../../common/customHooks/useFieldState'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {tErrors} from '../../common/types/types'\r\nimport {stateType} from '../../redux/store'\r\nimport {appUpdateState} from '../../redux/appReducer/appReducer'\r\nimport {loginAPI} from '../../common/api/loginAPI'\r\nimport commonStyles from '../../common/styles/CommonStyles.module.scss'\r\nimport {tObjectValidators, Validator} from '../../common/validators/Validator'\r\nimport {emailRegexp, telegramRegexp} from '../../common/constants/regexps'\r\nimport {Row} from \"../../common/components/Row/Row\";\r\n\r\nexport type tSignupParams = {\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string,\r\n    telegram: string,\r\n    password: string,\r\n    confirmPassword: string,\r\n}\r\n\r\nexport type tLoginParams = {\r\n    loginEmail: string,\r\n    loginPassword: string,\r\n}\r\n\r\nexport const Login: React.FC = React.memo(() => {\r\n    const [state, setState] = useState<{\r\n        loginMode: boolean\r\n    }>({\r\n        loginMode: true,\r\n    })\r\n\r\n    const switchMode = useCallback(() => {\r\n        setState(prev => ({...prev, loginMode: !prev.loginMode}))\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                state.loginMode ?\r\n                    <LoginPage/> :\r\n                    <SignUpPage/>\r\n            }\r\n            <div className={setClasses(styles.submit, 'flex')}>\r\n                <Button text={state.loginMode ? 'Sign up' : 'Sign in'}\r\n                        onClick={switchMode}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport const LoginPage: React.FC = React.memo(() => {\r\n    const validator = useMemo(() => {\r\n        const loginParams: tLoginParams = {\r\n            loginPassword: '',\r\n            loginEmail: '',\r\n        }\r\n        const validator = new Validator<tLoginParams>(loginParams)\r\n        const validators: tObjectValidators<tLoginParams> = {\r\n            loginEmail: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                    validator.checkTemplate(emailRegexp),\r\n                ]\r\n            },\r\n            loginPassword: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                ]\r\n            }\r\n\r\n        }\r\n        validator.updateValidators(validators)\r\n        return validator\r\n    }, [])\r\n    const [state, onChange, clearState, onBlur] = useFieldState<tLoginParams>(validator)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                SIGN IN\r\n                <span className={commonStyles.upperThenHeader}>SIGN IN</span>\r\n            </h1>\r\n            <Input value={state.data.loginEmail} name={'Email'} data-name={'loginEmail'}\r\n                   focusedBackgroundClass={styles.focusedText}\r\n                   onChange={onChange}\r\n                   onBlur={onBlur}/>\r\n            <Input value={state.data.loginPassword} type={'password'} name={'Password'} data-name={'loginPassword'}\r\n                   focusedBackgroundClass={styles.focusedText}\r\n                   onChange={onChange}\r\n                   onBlur={onBlur}/>\r\n            <div className={setClasses(styles.submit, 'flex')}>\r\n                <Button text={state.resError || 'Sign in'} disabled={!!state.resError}\r\n                        onClick={() => {\r\n                            loginAPI.login({\r\n                                email: state.data.loginEmail,\r\n                                hash: state.data.loginPassword\r\n                            })\r\n                                .then(() => {\r\n                                    return true\r\n                                })\r\n                                .catch(() => {\r\n                                    return false\r\n                                })\r\n                                .then((res: boolean) => {\r\n                                    clearState()\r\n                                    dispatch(appUpdateState({\r\n                                        authenticated: res\r\n                                    }))\r\n                                    if (res) {\r\n                                        dispatch(appUpdateState({\r\n                                            windowWrapper: undefined\r\n                                        }))\r\n                                    }\r\n                                })\r\n                        }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n})\r\nexport const SignUpPage: React.FC = React.memo(() => {\r\n\r\n    const validator = useMemo(() => {\r\n        const signupParams: tSignupParams = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            telegram: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        }\r\n        const validator = new Validator<tSignupParams>(signupParams)\r\n        const validators: tObjectValidators<tSignupParams> = {\r\n            confirmPassword: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                    validator.compareWith('password')\r\n                ]\r\n            },\r\n            firstName: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                ]\r\n            },\r\n            lastName: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                ]\r\n            },\r\n            email: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                    validator.checkTemplate(emailRegexp),\r\n                ]\r\n            },\r\n            password: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                    validator.compareWith('password')\r\n                ]\r\n            },\r\n            telegram: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                    validator.checkTemplate(telegramRegexp),\r\n                ]\r\n            },\r\n        }\r\n        validator.updateValidators(validators)\r\n        return validator\r\n    }, [])\r\n    const [state, onChange, clearState, onBlur] = useFieldState<tSignupParams>(validator)\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                SIGN UP\r\n                <span className={commonStyles.upperThenHeader}>SIGN UP</span>\r\n            </h1>\r\n            <Row withWrap>\r\n            <Input value={state.data.firstName}\r\n                   containerClass={styles.inputContainer}\r\n                   name={'First name'} data-name={'firstName'}\r\n                   onChange={onChange}\r\n                   onBlur={onBlur}/>\r\n            <Input value={state.data.lastName} name={'Last name'} data-name={'lastName'}\r\n                   containerClass={styles.inputContainer}\r\n                   onChange={onChange}\r\n                   onBlur={onBlur}/>\r\n            <Input value={state.data.email} name={'Email'} data-name={'email'}\r\n                   containerClass={styles.inputContainer}\r\n                   onChange={onChange}\r\n                   onBlur={onBlur}/>\r\n            <Input value={state.data.telegram} name={'Telegram'} data-name={'telegram'}\r\n                   containerClass={styles.inputContainer}\r\n                   onChange={onChange}\r\n                   onBlur={onBlur}/>\r\n            <Input value={state.data.password} type={'password'} name={'Password'} data-name={'password'}\r\n                   onChange={onChange}\r\n                   containerClass={styles.inputContainer}\r\n                   onBlur={onBlur}/>\r\n            <Input value={state.data.confirmPassword} type={'password'} name={'Confirm password'}\r\n                   data-name={'confirmPassword'}\r\n                   containerClass={styles.inputContainer}\r\n                   onChange={onChange}\r\n                   onBlur={onBlur}/>\r\n            </Row>\r\n            <div className={setClasses(styles.submit, 'flex')}>\r\n                <Button text={state.resError || 'Sign up'} disabled={!!state.resError}\r\n                        onClick={() => {\r\n                            loginAPI.signup(state.data)\r\n                                .then(console.log)\r\n                                .catch(console.log)\r\n                        }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n})","import React, {useCallback} from 'react';\r\nimport styles from './Nava.module.scss'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {stateType} from '../../../redux/store';\r\nimport {anchorType} from '../../../redux/reducer';\r\nimport {appUpdateState} from '../../../redux/appReducer/appReducer'\r\nimport {Login} from '../../Login/Login'\r\nimport loginStyles from '../../Login/Login.module.scss'\r\n\r\nimport {\r\n    AiOutlineContacts,\r\n    AiOutlineFundProjectionScreen,\r\n    AiOutlineLogin,\r\n    AiOutlineLogout, BsFileEarmarkPerson,\r\n    FiLogIn, FiLogOut,\r\n    GiSkills,\r\n    GrProjects\r\n} from 'react-icons/all'\r\nimport {setClasses} from '../../../common/utils/setClasses'\r\n\r\nexport const Nava = React.memo(() => {\r\n        const dispatch = useDispatch()\r\n        const currentAnchor = useSelector<stateType, anchorType>(state => state.state.currentAnchor)\r\n        const appWidth = useSelector<stateType, number>(state => state.appState.appWidth)\r\n        const authenticated = useSelector<stateType, boolean>(state => state.appState.authenticated)\r\n\r\n\r\n        const linkStyle = useCallback((elementId: string) => {\r\n            return `${styles.link} ${currentAnchor === elementId ? styles.active : ''}`\r\n        }, [currentAnchor])\r\n        const divStyle = useCallback((elementId: string) => {\r\n            return `${styles.underMenu} ${currentAnchor === elementId ? styles.underActive : ''}`\r\n        }, [currentAnchor])\r\n        const scrollTo = useCallback((elementId: string) => {\r\n            const elem = document.getElementById(elementId)\r\n            if (elem) {\r\n                const yOffset = 85\r\n                const y = elem.getBoundingClientRect().top - yOffset + window.pageYOffset\r\n                window.scrollTo({top: y, behavior: 'smooth'})\r\n            }\r\n        }, [])\r\n\r\n        return (\r\n            <div className={styles.nava}>\r\n                <div className={styles.linkContainer}>\r\n                    <NavLink className={() => linkStyle('main')}\r\n                             onClick={() => scrollTo('main')}\r\n                             to={'#main'}>\r\n                        {\r\n                            appWidth < 1000 ?\r\n                                <BsFileEarmarkPerson/> : 'Common'\r\n                        }\r\n                    </NavLink>\r\n                    <div className={divStyle('main')}>{''}</div>\r\n                </div>\r\n                <div className={styles.linkContainer}>\r\n                    <NavLink className={() => linkStyle('projects')}\r\n                             onClick={() => scrollTo('projects')}\r\n                             to={'#projects'}>\r\n                        {\r\n                            appWidth < 1000 ?\r\n                                <AiOutlineFundProjectionScreen/> : 'Projects'\r\n                        }\r\n                    </NavLink>\r\n                    <div className={divStyle('projects')}>{''}</div>\r\n                </div>\r\n                <div className={styles.linkContainer}>\r\n                    <NavLink className={() => linkStyle('skills')}\r\n                             onClick={() => scrollTo('skills')}\r\n                             to={'#skills'}>\r\n                        {\r\n                            appWidth < 1000 ?\r\n                                <GiSkills/> : 'Experience'\r\n                        }\r\n                    </NavLink>\r\n                    <div className={divStyle('skills')}>{''}</div>\r\n                </div>\r\n                <div className={styles.linkContainer}>\r\n                    <NavLink className={() => linkStyle('contacts')}\r\n                             onClick={() => scrollTo('contacts')}\r\n                             to={'#contacts'}>\r\n                        {\r\n                            appWidth < 1000 ?\r\n                                <AiOutlineContacts/> :\r\n                                'Contacts'\r\n                        }\r\n                    </NavLink>\r\n                    <div className={divStyle('contacts')}>{''}</div>\r\n                </div>\r\n                <div className={styles.linkContainer} onClick={() => {\r\n                    if (authenticated) {\r\n\r\n                    } else {\r\n                        dispatch(appUpdateState({\r\n                            windowWrapper: {element: <Login/>, containerClass: loginStyles.loginContainer}\r\n                        }))\r\n                    }\r\n                }}>\r\n                    <div className={styles.link}>\r\n                        {\r\n                            appWidth < 1000 ? authenticated ? <FiLogOut/> : <FiLogIn/> :\r\n                                authenticated ? 'Logout' : 'Login'\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport styles from './Header.module.scss'\r\nimport {Nava} from \"./Nava/Nava\";\r\nimport variables from './../../common/styles/Variables.module.scss'\r\n\r\ntype HeaderPropsType = {\r\n    showUp: boolean\r\n}\r\nexport const Header: React.FC<HeaderPropsType> = React.memo((props) => {\r\n        const [showUp, setShowUp] = useState(props.showUp)\r\n        const style = useMemo(() => {\r\n            return showUp ? {backgroundColor: variables.mainColor} : {}\r\n        }, [showUp])\r\n\r\n        useEffect(() => {\r\n            setShowUp(props.showUp)\r\n        }, [props.showUp])\r\n        return (\r\n            <div id={'header'} className={styles.header} style={style}>\r\n                <Nava/>\r\n            </div>\r\n        )\r\n    }\r\n)\r\n","import {actionsType} from \"./store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n//constants\r\nconst TEST = 'TEST'\r\nconst CHANGE_TYPED_VALUE = 'CHANGE-TYPED-VALUE'\r\nconst REVERSE = 'REVERSE'\r\nconst END_TYPE_CYCLE = 'END_TYPE_CYCLE'\r\nconst SET_CURRENT_ANCHOR = 'SET_CURRENT_ANCHOR'\r\n\r\nexport type anchorType = 'main' | 'skills' | 'projects' | 'contacts'\r\nexport type baseType = {\r\n    mainSpans: string[],\r\n    typed: string,\r\n    reverse: boolean,\r\n    count: number,\r\n    currentAnchor: anchorType,\r\n}\r\n\r\n//actions types\r\nexport type testActionType = ReturnType<typeof testAC>\r\nexport type changeTypedValueActionType = ReturnType<typeof changeTypedValue>\r\nexport type changeReverseActionType = ReturnType<typeof changeReverse>\r\nexport type endTypeCycleActionType = ReturnType<typeof endTypeCycle>\r\nexport type setCurrentAnchorActionType = ReturnType<typeof setCurrentAnchor>\r\n\r\n//action creators\r\nexport const endTypeCycle = (count: number) => {\r\n    return {\r\n        type: END_TYPE_CYCLE,\r\n        payload: {\r\n            typed: '',\r\n            reverse: false,\r\n            count,\r\n        }\r\n    } as const\r\n}\r\nexport const changeReverse = (reverse: boolean) => {\r\n    return {\r\n        type: REVERSE,\r\n        payload: {\r\n            reverse,\r\n        }\r\n    } as const\r\n}\r\nexport const testAC = () => {\r\n    return {\r\n        type: TEST,\r\n        payload: {}\r\n    } as const\r\n}\r\nexport const changeTypedValue = (typed: string) => {\r\n    return {\r\n        type: CHANGE_TYPED_VALUE,\r\n        payload: {\r\n            typed,\r\n        }\r\n    } as const\r\n}\r\nexport const setCurrentAnchor = (currentAnchor: anchorType) => {\r\n    return {\r\n        type: SET_CURRENT_ANCHOR,\r\n        payload: {\r\n            currentAnchor,\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState: baseType = {\r\n    mainSpans: ['Frontend', 'React', 'Redux', 'TypeScript', 'JavaScript'],\r\n    typed: '',\r\n    reverse: false,\r\n    count: 0,\r\n    currentAnchor: 'main',\r\n}\r\n\r\nexport const reducer = (state: baseType = initialState, action: actionsType) => {\r\n    switch (action.type) {\r\n        case END_TYPE_CYCLE:\r\n        case REVERSE:\r\n        case CHANGE_TYPED_VALUE:\r\n        case SET_CURRENT_ANCHOR:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case TEST:\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunks\r\nexport const checkAnchorTC = (elements: HTMLDivElement[], currentAnchor: anchorType) => (dispatch: Dispatch) => {\r\n    for (let elem of elements) {\r\n        let rect = elem.getBoundingClientRect()\r\n        if (((rect.top >= 85 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)) ||\r\n                (rect.top < 200 && rect.bottom >= (window.innerHeight || document.documentElement.clientHeight)- 100)) &&\r\n            currentAnchor !== elem.id) {\r\n            dispatch(setCurrentAnchor(elem.id as anchorType))\r\n        }\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { stateType } from \"../../../redux/store\";\r\nimport {baseType, changeReverse, changeTypedValue, endTypeCycle} from \"../../../redux/reducer\";\r\nimport styles from '../Main.module.scss'\r\n\r\nexport const ChangableSpan = React.memo(() => {\r\n    const state = useSelector<stateType, baseType>(state => state.state)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const currentCaption = state.mainSpans[state.count]\r\n        const typedCaption = state.typed\r\n        if (!state.reverse) {\r\n            setTimeout(() => {\r\n                if (currentCaption.length > typedCaption.length) {\r\n                    dispatch(changeTypedValue((typedCaption + currentCaption[typedCaption.length])))\r\n                } else {\r\n                    setTimeout(() => {\r\n                        dispatch(changeReverse(true))\r\n                    }, 2000)\r\n                }\r\n            }, Math.random() * (300 - 50) + 50)\r\n        } else {\r\n            setTimeout(() => {\r\n                if (typedCaption) {\r\n                    dispatch(changeTypedValue((typedCaption.slice(0, typedCaption.length - 1))))\r\n                } else {\r\n                    dispatch(endTypeCycle((state.count + 1) % state.mainSpans.length))\r\n                }\r\n            }, 200)\r\n        }\r\n    }, [state.typed, state.reverse, state.count, dispatch, state.mainSpans])\r\n    return (\r\n        <span className={styles.react}>\r\n            {\r\n                state.typed\r\n            }\r\n        </span>\r\n    )\r\n})","import React from 'react';\r\nimport styles from './Main.module.scss'\r\nimport commonStyles from '../../common/styles/CommonStyles.module.scss'\r\nimport {ChangableSpan} from './ChangableSpan/ChangableSpan';\r\nimport {useSelector} from 'react-redux'\r\nimport {stateType} from '../../redux/store'\r\n\r\nexport const Main = React.memo(() => {\r\n        const appWidth = useSelector<stateType, number>(state => state.appState.appWidth)\r\n\r\n        return (\r\n            <div id={'main'} className={styles.main}>\r\n                <div className={commonStyles.container + ' ' + styles.container}>\r\n                    <div className={styles.greeting}>\r\n                        <h2 className={styles.rest}>Hi There! I am</h2>\r\n                        <h1 className={styles.name}>ALEXANDR BASALOV</h1>\r\n                        <p>\r\n                            {\r\n                                <ChangableSpan/>\r\n                            }\r\n                            <span className={styles.keyboardSpan}>|</span>\r\n                            {\r\n                                appWidth < 700 &&\r\n                                <br/>\r\n                            }\r\n                            <span className={styles.developer}>developer.</span></p>\r\n                    </div>\r\n                    <div className={styles.photo}>{''}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\n","import React from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nimport styles from './Skill.module.scss'\r\n\r\ntype SkillPropsType = {\r\n    name: string,\r\n    icon: any,\r\n    description: string,\r\n}\r\nexport const Skill: React.FC<SkillPropsType> = React.memo((props) => {\r\n    return (\r\n        <div className={styles.skill}>\r\n            <div className={styles.skillContainer}>\r\n                <div className={styles.icon}>\r\n                    <FontAwesomeIcon icon={props.icon}/>\r\n                </div>\r\n                <h3>{props.name}</h3>\r\n                <p className={styles.description}>{props.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useMemo} from \"react\";\r\nimport styles from './Skills.module.scss'\r\nimport commonStyles from '../../common/styles/CommonStyles.module.scss'\r\nimport {Skill} from \"./Skill/Skill\";\r\nimport {faJs} from \"@fortawesome/free-brands-svg-icons/faJs\";\r\nimport {faFileCode, faProjectDiagram} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faCss3Alt} from \"@fortawesome/free-brands-svg-icons/faCss3Alt\";\r\nimport {faHtml5, faSass} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faVials} from \"@fortawesome/free-solid-svg-icons/faVials\";\r\nimport {faGithubSquare} from \"@fortawesome/free-brands-svg-icons/faGithubSquare\";\r\nimport {faHighlighter} from \"@fortawesome/free-solid-svg-icons/faHighlighter\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\r\nimport {faTextHeight} from \"@fortawesome/free-solid-svg-icons/faTextHeight\";\r\nimport {faPython} from \"@fortawesome/free-brands-svg-icons/faPython\";\r\nimport {faChartArea} from \"@fortawesome/free-solid-svg-icons/faChartArea\";\r\nimport {faDigitalTachograph} from \"@fortawesome/free-solid-svg-icons/faDigitalTachograph\";\r\n\r\n\r\nexport const Skills = React.memo(() => {\r\n    const skillsEntities = useMemo(() => {\r\n        return [\r\n            {\r\n                name:'JavaScript',\r\n                icon:faJs,\r\n                description:'Context, Closures, Event loop, Promises, Classes, Callbacks and more'\r\n            },\r\n            {\r\n                name:'TypeScript',\r\n                icon:faTextHeight,\r\n                description:'Types, Interfaces, Generics, Extends, Enums, Mixins, Utility types and more'},\r\n            {\r\n                name:'Thunk',\r\n                icon:faFileCode,\r\n                description:'Redux Middleware'},\r\n            {\r\n                name:'CSS3',\r\n                icon:faCss3Alt,\r\n                description:'CSS Flex, CSS Grid, Responsive Layout, Media queries and more'},\r\n            {\r\n                name:'SASS',\r\n                icon:faSass,\r\n                description:'Imports, Mixins, Variables, Functions, Nesting and more'},\r\n            {\r\n                name:'HTML',\r\n                icon:faHtml5,\r\n                description:'Semantic Layout, БЭМ'},\r\n            {\r\n                name:'Rest API',\r\n                icon:faProjectDiagram,\r\n                description:'Restful API, Axios, Fetch, Error Handling and more'},\r\n            {\r\n                name:'Python v3.6.x',\r\n                icon:faPython,\r\n                description:'SQLAlchemy, Flask and more'\r\n            },\r\n            {\r\n                name:'Unit test',\r\n                icon:faVials,\r\n                description:'TDD, StoryBook, Jest'},\r\n            {\r\n                name:'Git',\r\n                icon:faGithubSquare,\r\n                description:''},\r\n            {\r\n                name:'Material UI',\r\n                icon:faHighlighter,\r\n                description:''\r\n            },\r\n            {\r\n                name:'Ant Design',\r\n                icon:faEdit,\r\n                description:''\r\n            },\r\n            {\r\n                name: 'Data Viz',\r\n                icon: faChartArea,\r\n                description: 'SVG, D3'\r\n            },\r\n            {\r\n                name: 'Other API',\r\n                icon: faDigitalTachograph,\r\n                description: 'VK API, 2GIS API'\r\n            }\r\n\r\n        ]\r\n    }, [])\r\n    return (\r\n        <div id={'skills'} className={styles.skills}>\r\n            <div className={`${commonStyles.container} ${styles.container}`}>\r\n                <h2 className={commonStyles.title}>\r\n                    <span className={commonStyles.upperThenHeader}>EXPERIENCE</span>\r\n                    EXPERIENCE\r\n                </h2>\r\n                <div className={styles.skillsContainer}>\r\n                    {\r\n                        skillsEntities.map((skill, id) => {\r\n                            return <Skill key={id} {...skill}/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport styles from './Project.module.scss'\r\nimport {AiFillEye} from 'react-icons/all'\r\n\r\ntype ProjectPropsType = {\r\n    title: string,\r\n    style: { backgroundImage: string },\r\n    link: string;\r\n    tags: string[],\r\n}\r\nexport const Project: React.FC<ProjectPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={styles.project}>\r\n            <div className={styles.screen} style={props.style}>{''}</div>\r\n            <div className={styles.cover}>\r\n                <div className={styles.projectInfo}>\r\n                    <h3>{props.title}</h3>\r\n                    <p>\r\n                        {\r\n                            props.tags.map((tag: string, id: number) => {\r\n                                return <span key={id}>{tag + ' '}</span>\r\n                            })\r\n                        }\r\n                    </p>\r\n                    <a href={props.link}><h4>{'View '}\r\n                       <AiFillEye/></h4></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/portfolio.d2441210.png\";","export default __webpack_public_path__ + \"static/media/book.d579d7a8.png\";","export default __webpack_public_path__ + \"static/media/socnet.796d72ec.png\";","export default __webpack_public_path__ + \"static/media/testJob.69b8cac9.png\";","export default __webpack_public_path__ + \"static/media/pythonPortfolio.611cb87d.png\";","export default __webpack_public_path__ + \"static/media/map.3a5c7ba5.png\";","export default __webpack_public_path__ + \"static/media/graph.c11d6ace.jpg\";","import React, {useMemo} from \"react\";\r\nimport commonStyles from '../../common/styles/CommonStyles.module.scss'\r\nimport styles from './Projects.module.scss'\r\nimport {Project} from \"./Project/Project\";\r\nimport portfolioPic from './../../../src/assets/pic/portfolio.png'\r\nimport bookPic from './../../../src/assets/pic/book.png'\r\nimport socnet from './../../../src/assets/pic/socnet.png'\r\nimport testJob from './../../../src/assets/pic/testJob.png'\r\nimport pythonPortfolio from './../../../src/assets/pic/pythonPortfolio.png'\r\nimport map from './../../../src/assets/pic/map.png'\r\nimport graph from './../../../src/assets/pic/graph.jpg'\r\n\r\nexport const Projects = React.memo(() => {\r\n    const projectEntities = useMemo(() => {\r\n        return [\r\n            {\r\n                title: 'TypeScript Portfolio',\r\n                style: {backgroundImage: `url(${portfolioPic})`},\r\n                link: 'https://glennmiller1991.github.io/portfolio_ts/',\r\n                tags: [\r\n                    'TypeScript', 'Redux', 'SCSS', 'HTML', 'CSS3', 'Hooks'\r\n                ],\r\n            },\r\n            {\r\n                title: 'Looking for Book',\r\n                style: {backgroundImage: `url(${bookPic})`},\r\n                link: 'https://glennmiller1991.github.io/looking_for_book/#/',\r\n                tags: [\r\n                    'TypeScript', 'HTML', 'Redux', 'CSS3', 'Google Books API', 'Thunk', 'Hooks'\r\n                ]\r\n            },\r\n            {\r\n                title: 'Python Blog',\r\n                style: {backgroundImage: `url(${pythonPortfolio})`},\r\n                link: 'https://github.com/GlennMiller1991/PythonPortfolio',\r\n                tags: [\r\n                    'Python', 'JavaScript', 'Flask', 'HTML', 'CSS3', 'SQLAlchemy', 'MySQL',\r\n                ]\r\n            },\r\n            {\r\n                title: 'Social Network',\r\n                style: {backgroundImage: `url(${socnet})`},\r\n                link: 'https://glennmiller1991.github.io/social_network/#/',\r\n                tags: [\r\n                    'TypeScript', 'Redux', 'HTML', 'CSS3', 'Hooks', 'Thunk', 'StoryBook', 'VK Open API', 'REST API',\r\n                ]\r\n            },\r\n            {\r\n                title: 'Test Job',\r\n                style: {backgroundImage: `url(${testJob})`},\r\n                link: 'https://glennmiller1991.github.io/test_job/#/',\r\n                tags: [\r\n                    'TypeScript', 'Redux', 'HTML', 'CSS3', 'Hooks'\r\n                ]\r\n            },\r\n            {\r\n                title: 'Map Object Management',\r\n                style: {backgroundImage: `url(${map})`},\r\n                link: 'https://glennmiller1991.github.io/map/',\r\n                tags: [\r\n                    'TypeScript, JavaScript, HTML, SCSS, Hooks, 2GIS API',\r\n                ]\r\n            },\r\n            {\r\n                title: 'Graph Builder',\r\n                style: {backgroundImage: `url(${graph})`},\r\n                link: \"https://GlennMiller1991.github.io/graph\",\r\n                tags: [\r\n                    'TypeScript, JavaScript, HTML, SCSS, Hooks, SVG'\r\n                ]\r\n            }\r\n        ]\r\n    }, [])\r\n    return (\r\n        <div id={'projects'} className={styles.projects}>\r\n            <div className={`${commonStyles.container} ${styles.container}`}>\r\n                <h2 className={commonStyles.title}>\r\n                    <span className={commonStyles.upperThenHeader}>PROJECTS</span>\r\n                    PROJECTS</h2>\r\n                <div className={styles.projectsContainer}>\r\n                    {\r\n                        projectEntities.map((project, id) => {\r\n                            return <Project key={id} {...project}/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {tMessage} from '../types/types'\r\nimport {baseUrl} from '../constants/baseUrl'\r\nimport {requests} from './requests'\r\n\r\nexport const messageAPI = {\r\n    sendMessage(message: tMessage) {\r\n        return requests.postRequest<tMessage>(`${baseUrl}/messages`, message)\r\n    },\r\n\r\n    getMessages(message: tMessage) {\r\n        return requests.getRequest<tMessage>(`${baseUrl}/messages`)\r\n    }\r\n}","import React, {useMemo} from 'react';\r\nimport commonStyles from '../../common/styles/CommonStyles.module.scss'\r\nimport styles from './Contacts.module.scss'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Input} from '../../common/components/Input/Input'\r\nimport {setClasses} from '../../common/utils/setClasses'\r\nimport {Button} from '../../common/components/Button/Button'\r\nimport {useFieldState} from '../../common/customHooks/useFieldState'\r\nimport {messageAPI} from '../../common/api/messageAPI'\r\nimport {tObjectValidators, Validator} from '../../common/validators/Validator'\r\nimport {emailRegexp} from '../../common/constants/regexps'\r\n\r\ntype tLoginParamType = {\r\n    email: string,\r\n    name: string,\r\n    subject: string,\r\n    message: string,\r\n}\r\n\r\nexport const Contacts = React.memo(() => {\r\n    const validator = useMemo(() => {\r\n        const loginParams: tLoginParamType = {\r\n            email: '',\r\n            name: '',\r\n            subject: '',\r\n            message: '',\r\n        }\r\n        const validator = new Validator<tLoginParamType>(loginParams)\r\n        const validators: tObjectValidators<tLoginParamType> = {\r\n            email: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                    validator.checkTemplate(emailRegexp),\r\n                ]\r\n            },\r\n            name: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(20),\r\n                ]\r\n            },\r\n            subject: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(150)\r\n                ]\r\n            },\r\n            message: {\r\n                validators: [\r\n                    validator.required(),\r\n                    validator.checkStringLength(1500)\r\n                ]\r\n            }\r\n\r\n        }\r\n        validator.updateValidators(validators)\r\n        return validator\r\n    }, [])\r\n    const [state, onChange, clearState, onBlur] = useFieldState<tLoginParamType>(validator)\r\n\r\n\r\n    console.log(state.resError)\r\n    return (\r\n        <div id={'contacts'} className={styles.wrapper}>\r\n            <div className={`${commonStyles.container} ${styles.container}`}>\r\n                <h2 className={commonStyles.title}>\r\n                    <span className={commonStyles.upperThenHeader}>GET IN TOUCH</span>\r\n                    CONTACTS\r\n                </h2>\r\n                <div className={styles.inputs}>\r\n                    <Input onChange={onChange}\r\n                           containerClass={styles.name}\r\n                           onBlur={onBlur}\r\n                           data-name={'name'}\r\n                           value={state.data.name}\r\n                           name={'Name'}\r\n                    />\r\n                    <Input onChange={onChange}\r\n                           containerClass={styles.email}\r\n                           onBlur={onBlur}\r\n                           data-name={'email'}\r\n                           value={state.data.email}\r\n                           name={'Email'}\r\n                    />\r\n                    <Input onChange={onChange}\r\n                           containerClass={styles.subject}\r\n                           onBlur={onBlur}\r\n                           data-name={'subject'}\r\n                           value={state.data.subject}\r\n                           name={'Subject'}\r\n                    />\r\n                    <Input onChange={onChange}\r\n                           containerClass={styles.message}\r\n                           asTextArea\r\n                           onBlur={onBlur}\r\n                           data-name={'message'}\r\n                           value={state.data.message}\r\n                           name={'Message'}\r\n                    />\r\n                    <div className={setClasses(styles.submit, 'flex')}>\r\n                        <Button text={state.resError || 'Send message'} disabled={!!state.resError}\r\n                                onClick={() => {\r\n                                    messageAPI.sendMessage(state.data)\r\n                                        .then(clearState)\r\n                                }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport styles from './Up.module.scss'\r\nimport {FaChevronUp} from 'react-icons/all'\r\n\r\nexport const Up = React.memo(() => {\r\n    const scrollTo = useCallback(() => {\r\n        const elem = document.getElementById('main')\r\n        if (elem) {\r\n            const yOffset = 85\r\n            const y = elem.getBoundingClientRect().top - yOffset + window.pageYOffset\r\n            window.scrollTo({top: y, behavior: 'smooth'})\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className={styles.up} onClick={scrollTo}>\r\n            <FaChevronUp/>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport styles from \"./Socnet.module.scss\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\ntype SocnetPropsType = {\r\n    icon: any,\r\n    link: string | undefined\r\n}\r\nexport const Socnet: React.FC<SocnetPropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={styles.icon}>\r\n            <a href={props.link}>\r\n                <FontAwesomeIcon icon={props.icon} size={'xs'}/>\r\n            </a>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport styles from './Footer.module.scss'\r\nimport {faVk, faGit, faTelegram, faWhatsapp} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faAt, faMapMarked, faPhone} from \"@fortawesome/free-solid-svg-icons\";\r\nimport commonStyles from \"../../common/styles/CommonStyles.module.scss\";\r\nimport {Socnet} from \"./Socnet/Socnet\";\r\n\r\nexport const Footer = React.memo(() => {\r\n\r\n    return (\r\n        <div className={styles.footer}>\r\n            <div className={`${commonStyles.container} ${styles.container}`}>\r\n                <div className={styles.socnetsContainer}>\r\n                    <Socnet link={'https://vk.com/id39116637'} icon={faVk}/>\r\n                    <Socnet link={'https://github.com/GlennMiller1991'} icon={faGit}/>\r\n                    <Socnet link={'https://t.me/alexandroBas'} icon={faTelegram}/>\r\n                    <Socnet link={'mailto:gatesoftommorow91@mail.ru'} icon={faAt}/>\r\n                    <Socnet link={'tel:+79251811173'} icon={faPhone}/>\r\n                    <Socnet link={'https://goo.gl/maps/2EVKtNDF57FdoWiKA'} icon={faMapMarked}/>\r\n                    <Socnet link={'https://wa.me/89150681485'} icon={faWhatsapp}/>\r\n                </div>\r\n                <p className={styles.copyright}>\r\n                    2021© React Developer Resume. Developed and Designed by Alexandr Basalov\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {\r\n    changeReverseActionType,\r\n    changeTypedValueActionType,\r\n    endTypeCycleActionType,\r\n    reducer, setCurrentAnchorActionType,\r\n    testActionType\r\n} from './reducer';\r\nimport {appReducer, tAppActions} from './appReducer/appReducer'\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    state: reducer,\r\n    appState: appReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type stateType = ReturnType<typeof store.getState>\r\nexport type actionsType = testActionType\r\n    | changeTypedValueActionType\r\n    | changeReverseActionType\r\n    | endTypeCycleActionType\r\n    | setCurrentAnchorActionType\r\n    | tAppActions\r\n\r\nexport type dispatchType = typeof store.dispatch\r\nexport const useAppDispatch: () => dispatchType = useDispatch","export const wwContainer = 'wwContainer'\r\nexport const wwCanvas = 'wwCanvas'\r\nexport const pageTitle = 'React Developer'\r\nexport const appContainer = 'app'","import {tPos} from \"../../types/types\";\r\n\r\ntype tParticleProps = {\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    dots: Particle[]\r\n}\r\n\r\nexport class Particle {\r\n    pos: tPos\r\n    radius: number\r\n    velocity: tPos\r\n    coef: number\r\n\r\n    constructor(props: tParticleProps) {\r\n        this.pos = {x: props.x, y: props.y}\r\n        this.radius = props.radius\r\n        this.velocity = {\r\n            x: (Math.random() * 4) - 2,\r\n            y: (Math.random() * 4) - 2,\r\n        }\r\n        this.coef = 1\r\n    }\r\n\r\n\r\n    move() {\r\n        this.velocity.x *= 0.99 * this.coef\r\n        this.velocity.y *= 0.99 * this.coef\r\n        this.radius *= 0.99 * this.coef\r\n        this.pos.x += this.velocity.x\r\n        this.pos.y += this.velocity.y\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#454545'\r\n        ctx.beginPath()\r\n        ctx.arc(this.pos.x, this.pos.y, this.radius, 0, 2 * Math.PI)\r\n        ctx.closePath()\r\n        ctx.fill()\r\n    }\r\n}","import React, {useEffect, useRef} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {stateType} from \"../../../../redux/store\";\r\nimport {Particle} from \"../../../classes/Particle/Particle\";\r\nimport {wwCanvas} from \"../../../constants/ids\";\r\nimport styles from \"../WindowWrapper.module.scss\"\r\n\r\nexport const WindowWrapperCanvas: React.FC = React.memo(() => {\r\n    const width = useSelector<stateType, number>(state => state.appState.appWidth)\r\n    const height = useSelector<stateType, number>(state => state.appState.appHeight)\r\n    const isMobile = useSelector<stateType, boolean>(state => state.appState.isMobile)\r\n    const drawFlag = useRef(false)\r\n\r\n\r\n    // visual effects\r\n    useEffect(() => {\r\n        const width = window.innerWidth\r\n        const height = window.innerHeight\r\n        const dots: Particle[] = []\r\n        let reqId: any\r\n\r\n        const pcListener = (event: MouseEvent) => {\r\n            dots.push(new Particle({\r\n                x: event.clientX,\r\n                y: event.clientY,\r\n                radius: Math.random() * 30,\r\n                dots,\r\n            }))\r\n            if (dots.length > 300) {\r\n                dots.splice(0 ,1)\r\n            }\r\n        }\r\n        const mobListener = () => {\r\n            return setInterval(() => {\r\n                dots.push(new Particle({\r\n                    x: Math.random() * width,\r\n                    y: Math.random() * height,\r\n                    radius: Math.random() * 30,\r\n                    dots,\r\n                }))\r\n            }, 300)\r\n        }\r\n        const canvas = document.getElementById(wwCanvas) as HTMLCanvasElement | null\r\n        if (canvas) {\r\n            const context = canvas.getContext('2d')\r\n            if (context) {\r\n\r\n                drawFlag.current = true\r\n                !isMobile && canvas.addEventListener('mousemove', pcListener)\r\n                isMobile && (reqId = mobListener())\r\n\r\n                const draw = () => {\r\n                    context.clearRect(0, 0, width, height)\r\n                    for (let i = 0; i < dots.length; i++) {\r\n                        const particle = dots[i]\r\n                        particle.move()\r\n                        particle.draw(context)\r\n\r\n                        if ((Math.abs(particle.velocity.x) < 0.015) || particle.radius < 1) {\r\n                            dots.splice(i, 1)\r\n                        }\r\n                        if (dots.length > 50) {\r\n                            dots[0].coef *= 0.5\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const render = () => {\r\n                    if (drawFlag.current || dots.length) {\r\n                        draw()\r\n                    }\r\n                    reqId = requestAnimationFrame(render)\r\n                }\r\n\r\n                render()\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (canvas) {\r\n                if (isMobile) {\r\n                    clearInterval(reqId)\r\n                } else {\r\n                    cancelAnimationFrame(reqId)\r\n                    canvas.removeEventListener('mousemove', pcListener)\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <canvas id={wwCanvas} width={width} height={height}\r\n                    onMouseEnter={() => {\r\n                        drawFlag.current = true\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                        drawFlag.current = false\r\n                    }}\r\n                    className={styles.canvas}/>\r\n            <svg className={styles.svg}>\r\n                <defs>\r\n                    <filter id=\"liquid\">\r\n                        <feTurbulence type=\"fractalNoise\" baseFrequency=\".03\"/>\r\n                        <feDisplacementMap in=\"SourceGraphic\" scale=\"150\"/>\r\n                    </filter>\r\n                </defs>\r\n            </svg>\r\n        </>\r\n    )\r\n})","import React, {useCallback, useEffect} from 'react'\r\nimport styles from './WindowWrapper.module.scss'\r\nimport {setClasses} from '../../utils/setClasses'\r\nimport {IoCloseOutline} from 'react-icons/all'\r\nimport {useDispatch} from 'react-redux'\r\nimport {appUpdateState} from '../../../redux/appReducer/appReducer'\r\nimport {SwipeListener} from \"../../utils/SwipeListener\";\r\nimport {wwContainer} from \"../../constants/ids\";\r\nimport {WindowWrapperCanvas} from \"./WindowWrapperCanvas/WindowWrapperCanvas\";\r\n\r\n\r\ntype tWindowWrapper = {\r\n    containerClass?: string,\r\n    children?: React.ReactNode\r\n}\r\nexport const WindowWrapper: React.FC<tWindowWrapper> = React.memo(({\r\n                                                                       containerClass,\r\n                                                                       children\r\n                                                                   }) => {\r\n    const dispatch = useDispatch()\r\n    const onClose = useCallback(() => {\r\n        dispatch(appUpdateState({\r\n            windowWrapper: undefined\r\n        }))\r\n    }, [])\r\n\r\n\r\n\r\n    // swipe out\r\n    useEffect(() => {\r\n        const container = document.getElementById(wwContainer)\r\n        let swipeListener: SwipeListener\r\n        if (container) {\r\n            // swipeListener = new SwipeListener({\r\n            //     element: container,\r\n            //     callback: onClose,\r\n            // })\r\n        }\r\n\r\n        return () => {\r\n            swipeListener &&\r\n                swipeListener.removeEventListener()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={setClasses(styles.modalContainer, 'flexCenter')}\r\n             id={wwContainer}>\r\n            <WindowWrapperCanvas/>\r\n            <div className={setClasses(styles.modalContent, containerClass)}>\r\n                <button className={setClasses(styles.closeBtn, 'flexCenter')} onClick={onClose}>\r\n                    <IoCloseOutline/>\r\n                </button>\r\n                {\r\n                    children\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport './App.css';\nimport './common/styles/variables.css'\nimport './index.scss'\n\nimport {Header} from './components/Header/Header';\nimport {Main} from './components/Main/Main';\nimport {Skills} from './components/Skills/Skills';\nimport {Projects} from './components/Projects/Projects';\nimport {Contacts} from './components/Contacts/Contacts';\nimport {Up} from './components/Up/Up';\nimport {Footer} from './components/Footer/Footer';\nimport {anchorType, checkAnchorTC} from './redux/reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {stateType, useAppDispatch} from './redux/store';\nimport {appUpdateErrors, appUpdateState, tAppState} from './redux/appReducer/appReducer';\nimport {WindowWrapper} from './common/components/WindowWrapper/WindowWrapper'\nimport {loginAPI} from './common/api/loginAPI'\nimport {appContainer, pageTitle} from './common/constants/ids';\n\nfunction App() {\n    const currentAnchor = useSelector<stateType, anchorType>(state => state.state.currentAnchor)\n    const appState = useSelector<stateType, tAppState>(state => state.appState)\n    const dispatch = useAppDispatch()\n    const [scrollY, setScrollY] = useState(0)\n    const [elements, setElements] = useState<HTMLDivElement[]>([])\n    const anchorsId: anchorType[] = useMemo(() => {\n        return ['main', 'skills', 'contacts', 'projects']\n    }, [])\n    const [showUp, setShowUp] = useState(false)\n    const onScrollWindow = useCallback(() => {\n        setScrollY(window.scrollY)\n    }, [])\n\n    //on scrolling execute\n    useEffect(() => {\n        const header = document.getElementById('header')\n        if (header) {\n            const currentY = document.documentElement.scrollTop\n            const headerHeight = header.offsetHeight\n            if (currentY <= headerHeight) {\n                if (showUp) setShowUp(false)\n            } else {\n                if (!showUp) setShowUp(true)\n            }\n        }\n        // @ts-ignore\n        dispatch(checkAnchorTC(elements, currentAnchor))\n    }, [scrollY, showUp])\n\n    //get elements and add event listener\n    useEffect(() => {\n\n        const isMobile = window.ontouchstart || window.navigator.userAgent.toLowerCase().includes('mobi')\n        dispatch(appUpdateState({\n            isMobile: !!isMobile\n        }))\n\n        document.title = pageTitle\n        const elements = []\n        for (let i = 0; i < anchorsId.length; i++) {\n            const elem = document.getElementById(anchorsId[i])\n            if (elem) {\n                elements.push(elem)\n            }\n        }\n        window.addEventListener('scroll', onScrollWindow)\n        setElements(elements as HTMLDivElement[])\n\n        const observer = new ResizeObserver(() => {\n            const element = document.getElementById(appContainer)\n            if (element) {\n                dispatch(appUpdateState({\n                    appWidth: element.getBoundingClientRect().width,\n                    appHeight: window.innerHeight,\n                }))\n            }\n        })\n\n        const element = document.getElementById(appContainer)\n        if (element) {\n            observer.observe(element)\n        }\n\n        loginAPI.authenticate()\n            .then(() => {\n                dispatch(appUpdateState({authenticated: true}))\n            })\n            .catch(err => {\n                console.log(err.message)\n            })\n\n        return () => {\n            element && observer && observer.unobserve(element)\n            window.removeEventListener('scroll', onScrollWindow)\n        }\n    }, [])\n\n    return (\n        <div id={appContainer}>\n            <Header showUp={showUp}/>\n            <Main/>\n            <Skills/>\n            <Projects/>\n            <Contacts/>\n            <Footer/>\n            {\n                showUp && <Up/>\n            }\n            {\n                appState.windowWrapper &&\n                <WindowWrapper containerClass={appState.windowWrapper.containerClass}>\n                    {\n                        appState.windowWrapper.element\n                    }\n                </WindowWrapper>\n            }\n        </div>\n    );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { RouterProvider, createHashRouter } from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport { store } from './redux/store';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nconst router = createHashRouter([\r\n    {\r\n        path: '/*',\r\n        element:  <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    }\r\n    ])\r\n\r\nroot.render(<RouterProvider router={router}/>);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}